[{"C:\\Users\\Black\\Documents\\HACKTIV\\Phase-3\\w4\\project-test01\\CLIENT\\client\\src\\index.js":"1","C:\\Users\\Black\\Documents\\HACKTIV\\Phase-3\\w4\\project-test01\\CLIENT\\client\\src\\App.js":"2","C:\\Users\\Black\\Documents\\HACKTIV\\Phase-3\\w4\\project-test01\\CLIENT\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Black\\Documents\\HACKTIV\\Phase-3\\w4\\project-test01\\CLIENT\\client\\src\\components\\Room.js":"4","C:\\Users\\Black\\Documents\\HACKTIV\\Phase-3\\w4\\project-test01\\CLIENT\\client\\src\\pages\\index.js":"5","C:\\Users\\Black\\Documents\\HACKTIV\\Phase-3\\w4\\project-test01\\CLIENT\\client\\src\\components\\LoadingSpin.js":"6","C:\\Users\\Black\\Documents\\HACKTIV\\Phase-3\\w4\\project-test01\\CLIENT\\client\\src\\pages\\ChatRoom.js":"7","C:\\Users\\Black\\Documents\\HACKTIV\\Phase-3\\w4\\project-test01\\CLIENT\\client\\src\\pages\\QuestionForum.js":"8","C:\\Users\\Black\\Documents\\HACKTIV\\Phase-3\\w4\\project-test01\\CLIENT\\client\\src\\pages\\ProfilePage.js":"9","C:\\Users\\Black\\Documents\\HACKTIV\\Phase-3\\w4\\project-test01\\CLIENT\\client\\src\\pages\\Home.js":"10","C:\\Users\\Black\\Documents\\HACKTIV\\Phase-3\\w4\\project-test01\\CLIENT\\client\\src\\components\\index.js":"11","C:\\Users\\Black\\Documents\\HACKTIV\\Phase-3\\w4\\project-test01\\CLIENT\\client\\src\\config\\axios.js":"12","C:\\Users\\Black\\Documents\\HACKTIV\\Phase-3\\w4\\project-test01\\CLIENT\\client\\src\\components\\CardPost.js":"13","C:\\Users\\Black\\Documents\\HACKTIV\\Phase-3\\w4\\project-test01\\CLIENT\\client\\src\\components\\Banner.js":"14","C:\\Users\\Black\\Documents\\HACKTIV\\Phase-3\\w4\\project-test01\\CLIENT\\client\\src\\components\\CardRoom.js":"15","C:\\Users\\Black\\Documents\\HACKTIV\\Phase-3\\w4\\project-test01\\CLIENT\\client\\src\\components\\ResponseGoogle.js":"16","C:\\Users\\Black\\Documents\\HACKTIV\\Phase-3\\w4\\project-test01\\CLIENT\\client\\src\\components\\ChatBubbles.js":"17","C:\\Users\\Black\\Documents\\HACKTIV\\Phase-3\\w4\\project-test01\\CLIENT\\client\\src\\components\\ProfileDetail.js":"18","C:\\Users\\Black\\Documents\\HACKTIV\\Phase-3\\w4\\project-test01\\CLIENT\\client\\src\\components\\ProfileInfo.js":"19","C:\\Users\\Black\\Documents\\HACKTIV\\Phase-3\\w4\\project-test01\\CLIENT\\client\\src\\components\\ProfileStats.js":"20","C:\\Users\\Black\\Documents\\HACKTIV\\Phase-3\\w4\\project-test01\\CLIENT\\client\\src\\components\\ProfileCard.js":"21","C:\\Users\\Black\\Documents\\HACKTIV\\Phase-3\\w4\\project-test01\\CLIENT\\client\\src\\components\\CommentCard.js":"22","C:\\Users\\Black\\Documents\\HACKTIV\\Phase-3\\w4\\project-test01\\CLIENT\\client\\src\\components\\Navbar.js":"23"},{"size":680,"mtime":1611718248041,"results":"24","hashOfConfig":"25"},{"size":490,"mtime":1611718248026,"results":"26","hashOfConfig":"25"},{"size":375,"mtime":1611546206453,"results":"27","hashOfConfig":"25"},{"size":12456,"mtime":1611746469078,"results":"28","hashOfConfig":"25"},{"size":190,"mtime":1611556235516,"results":"29","hashOfConfig":"25"},{"size":220,"mtime":1611723051990,"results":"30","hashOfConfig":"25"},{"size":2465,"mtime":1611546206451,"results":"31","hashOfConfig":"25"},{"size":3917,"mtime":1611749286680,"results":"32","hashOfConfig":"25"},{"size":1079,"mtime":1611546206452,"results":"33","hashOfConfig":"25"},{"size":4988,"mtime":1611759352829,"results":"34","hashOfConfig":"25"},{"size":480,"mtime":1611628097839,"results":"35","hashOfConfig":"25"},{"size":228,"mtime":1611718248040,"results":"36","hashOfConfig":"25"},{"size":1269,"mtime":1611738646663,"results":"37","hashOfConfig":"25"},{"size":830,"mtime":1611746469073,"results":"38","hashOfConfig":"25"},{"size":1874,"mtime":1611754087366,"results":"39","hashOfConfig":"25"},{"size":1247,"mtime":1611738646669,"results":"40","hashOfConfig":"25"},{"size":269,"mtime":1611723051986,"results":"41","hashOfConfig":"25"},{"size":1429,"mtime":1611546206444,"results":"42","hashOfConfig":"25"},{"size":3774,"mtime":1611546206445,"results":"43","hashOfConfig":"25"},{"size":2225,"mtime":1611718248035,"results":"44","hashOfConfig":"25"},{"size":744,"mtime":1611546206444,"results":"45","hashOfConfig":"25"},{"size":4979,"mtime":1611746469075,"results":"46","hashOfConfig":"25"},{"size":8287,"mtime":1611746469076,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1b98zg0",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"50"},"C:\\Users\\Black\\Documents\\HACKTIV\\Phase-3\\w4\\project-test01\\CLIENT\\client\\src\\index.js",[],["99","100"],"C:\\Users\\Black\\Documents\\HACKTIV\\Phase-3\\w4\\project-test01\\CLIENT\\client\\src\\App.js",[],"C:\\Users\\Black\\Documents\\HACKTIV\\Phase-3\\w4\\project-test01\\CLIENT\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Black\\Documents\\HACKTIV\\Phase-3\\w4\\project-test01\\CLIENT\\client\\src\\components\\Room.js",[],"C:\\Users\\Black\\Documents\\HACKTIV\\Phase-3\\w4\\project-test01\\CLIENT\\client\\src\\pages\\index.js",[],"C:\\Users\\Black\\Documents\\HACKTIV\\Phase-3\\w4\\project-test01\\CLIENT\\client\\src\\components\\LoadingSpin.js",[],"C:\\Users\\Black\\Documents\\HACKTIV\\Phase-3\\w4\\project-test01\\CLIENT\\client\\src\\pages\\ChatRoom.js",[],"C:\\Users\\Black\\Documents\\HACKTIV\\Phase-3\\w4\\project-test01\\CLIENT\\client\\src\\pages\\QuestionForum.js",["101","102"],"import { CommentCard, NavBar } from '../components'\r\nimport React,{ useEffect, useState} from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport axios from '../config/axios'\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react'\r\nimport Editor from '@ckeditor/ckeditor5-build-classic'\r\n\r\nexport default function Forum(){\r\n  let params = useParams()\r\n  const [loading, setLoading] = useState(false)\r\n  const [postData, setPostData] = useState([])\r\n  const [answerData, setAnswerData] = useState([])\r\n  const [inputPost, setInputPost] = useState(\"\")\r\n  const [refreshKey, setRefreshKey] = useState(0)\r\n  // const [editorState, setEditorState] = React.useState(()=>EditorState.createEmpty())\r\n\r\n  useEffect(() => {\r\n    refetch()\r\n  }, [refreshKey])\r\n  \r\n  function handleChange(e){\r\n    setInputPost(e.target.value)\r\n  }\r\n  const refetch = () => {\r\n    let post\r\n    axios.get(`/post/${params.id}`)\r\n      .then(({data})  => {\r\n        post = data\r\n        return axios.get(`/answers/${params.id}`)\r\n      })\r\n      .then(({data})  => {\r\n        setPostData(post)\r\n        setAnswerData(data)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n  function handleSubmit(e){\r\n    e.preventDefault()\r\n    setLoading(true)\r\n    axios({\r\n      method: 'POST',\r\n      url: `/answers/${params.id}`,\r\n      headers: {\r\n        access_token: localStorage.getItem('access_token')\r\n      },\r\n      data: {\r\n        description: inputPost\r\n      }\r\n    })\r\n      .then(_ => {\r\n        setRefreshKey(oldKey => oldKey + 1)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      }).finally(_ => {\r\n        setInputPost('')\r\n        setLoading(false)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <NavBar/>\r\n      <div className=\"container fluid mt-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <h1 className='display-8'>{postData.question}</h1>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <div className=\"row\">\r\n          {/* <div className=\"col mt-3\">\r\n            {postData.description}\r\n          </div> */}\r\n          <div className=\"col mt-3\" dangerouslySetInnerHTML={{ __html: postData.description }} />\r\n          <small>#{postData.category}</small>\r\n        </div>\r\n        <div className=\"row mt-5\">\r\n          {\r\n            answerData.map(answer => {\r\n              return (\r\n                <CommentCard key={answer.id} refetch={refetch} name={answer.User.nickname} comment={answer.description} PostId={params.id} AnswerId={answer.id}/> \r\n              )\r\n            })\r\n          }\r\n          <div className=\"col-12 mt-3\">\r\n            <h3>Your Answer</h3>\r\n            <small className='mt-2'>Add your own comments here</small>\r\n            \r\n            <form onSubmit={handleSubmit}>\r\n            <div className=\"mt-4 form-floating\">\r\n              {/* <textarea onChange={handleChange} value={inputPost} className=\"form-control\" placeholder=\"Leave a comment here\" id=\"floatingTextarea2\" style={{height: \"100px\"}}></textarea> */}\r\n              <CKEditor\r\n                  config={{placeholder: \"comment ...\"}} \r\n                  editor={ Editor }\r\n                  data={inputPost}\r\n                  onReady={ editor => {\r\n                      // You can store the \"editor\" and use when it is needed.\r\n                      console.log( 'Editor is ready to use!', editor );\r\n                  } }\r\n                  onChange={ ( event, editor ) => {\r\n                      const data = editor.getData();\r\n                      setInputPost(data)\r\n                      console.log( { event, editor, data } );\r\n                  } }\r\n              />\r\n            </div>\r\n            <div className=\"col mt-3 mb-5\">\r\n              <button className='btn btn-primary btn-block' onClick={handleChange} >Post</button>\r\n            </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}","C:\\Users\\Black\\Documents\\HACKTIV\\Phase-3\\w4\\project-test01\\CLIENT\\client\\src\\pages\\ProfilePage.js",[],"C:\\Users\\Black\\Documents\\HACKTIV\\Phase-3\\w4\\project-test01\\CLIENT\\client\\src\\pages\\Home.js",["103","104"],"C:\\Users\\Black\\Documents\\HACKTIV\\Phase-3\\w4\\project-test01\\CLIENT\\client\\src\\components\\index.js",[],"C:\\Users\\Black\\Documents\\HACKTIV\\Phase-3\\w4\\project-test01\\CLIENT\\client\\src\\config\\axios.js",[],"C:\\Users\\Black\\Documents\\HACKTIV\\Phase-3\\w4\\project-test01\\CLIENT\\client\\src\\components\\CardPost.js",[],"C:\\Users\\Black\\Documents\\HACKTIV\\Phase-3\\w4\\project-test01\\CLIENT\\client\\src\\components\\Banner.js",[],"C:\\Users\\Black\\Documents\\HACKTIV\\Phase-3\\w4\\project-test01\\CLIENT\\client\\src\\components\\CardRoom.js",["105"],"import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport {Button} from 'react-bootstrap'\r\nimport axios from '../config/axios'\r\nexport default function CardRoom(props) {\r\n  const [isRoomFull,setIsRoomFull] = useState(false)\r\n  const history = useHistory()\r\n  const handleClick = () => {\r\n    if(localStorage.getItem('access_token')){\r\n      axios.get('/listRoom')\r\n        .then(({data}) => {\r\n          if(data[props.roomId]){\r\n            if(Object.keys(data[props.roomId]).length === 2){\r\n              setIsRoomFull(true)\r\n            }else{\r\n              history.push(`/room/${props.roomId}`)\r\n            }\r\n          }else{\r\n            history.push(`/room/${props.roomId}`)\r\n          }\r\n        }).catch(err => console.log(err))\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios.get('/listRoom')\r\n      .then(({data}) => {\r\n        if(data[props.roomId]){\r\n          if(Object.keys(data[props.roomId]).length === 2){\r\n            setIsRoomFull(true)\r\n          }\r\n        }\r\n      })\r\n  },[])\r\n\r\n  return (\r\n    <div className=\"card mb-3 rounded-pill\" style={{width: \"95%\", minHeight: '100px', marginTop: '10px'}} onClick={handleClick}>\r\n      <div className=\"row g-0\">\r\n        <div className=\"col-md-3 \">\r\n          <span> </span>\r\n          \r\n        </div>\r\n        <div className=\"col-md-8 ml-2\">\r\n          <div className=\"card-body\">\r\n            <h6 className=\"card-title\">Room {props.roomId}</h6>\r\n            {\r\n              isRoomFull ? \r\n              <p className=\"card-text\"><small className=\"text-muted\">room is full</small></p>\r\n              :\r\n              <Button className=\"mb-12 ml-2 rounded-pill\" style={{width:\"100%\"}}  onClick={handleClick} >Join</Button>\r\n            }\r\n            <span></span> \r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    \r\n  )\r\n}\r\n","C:\\Users\\Black\\Documents\\HACKTIV\\Phase-3\\w4\\project-test01\\CLIENT\\client\\src\\components\\ResponseGoogle.js",[],"C:\\Users\\Black\\Documents\\HACKTIV\\Phase-3\\w4\\project-test01\\CLIENT\\client\\src\\components\\ChatBubbles.js",[],"C:\\Users\\Black\\Documents\\HACKTIV\\Phase-3\\w4\\project-test01\\CLIENT\\client\\src\\components\\ProfileDetail.js",[],"C:\\Users\\Black\\Documents\\HACKTIV\\Phase-3\\w4\\project-test01\\CLIENT\\client\\src\\components\\ProfileInfo.js",[],"C:\\Users\\Black\\Documents\\HACKTIV\\Phase-3\\w4\\project-test01\\CLIENT\\client\\src\\components\\ProfileStats.js",[],"C:\\Users\\Black\\Documents\\HACKTIV\\Phase-3\\w4\\project-test01\\CLIENT\\client\\src\\components\\ProfileCard.js",[],"C:\\Users\\Black\\Documents\\HACKTIV\\Phase-3\\w4\\project-test01\\CLIENT\\client\\src\\components\\CommentCard.js",["106","107"],"import { Modal, Form, Button, NavLink } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\nimport axios from \"../config/axios\";\r\n\r\nexport default function CommentCard(props) {\r\n  const [show, setShow] = useState(false);\r\n  const [showDeleteModal, setDeleteModalShow] = useState(false);\r\n  const [comment, setComment] = useState(\"\");\r\n  const [hideBtn] = useState(localStorage.getItem('nickname') === props.name ? false : true)\r\n\r\n  function handleClose(status) {\r\n    if (status === \"save-edit\") {\r\n      axios({\r\n        method: \"PUT\",\r\n        url: `/answers/${props.PostId}/${props.AnswerId}`,\r\n        headers: {\r\n          access_token: localStorage.getItem(\"access_token\"),\r\n        },\r\n        data: {\r\n          description: comment,\r\n        },\r\n      })\r\n        .then((_) => {\r\n          setShow(false);\r\n          props.refetch();\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      setShow(false);\r\n    }\r\n  }\r\n\r\n  function handleShow(e) {\r\n    e.preventDefault();\r\n    axios\r\n      .get(`/answers/${props.PostId}/${props.AnswerId}`)\r\n      .then(({ data }) => {\r\n        setComment(data);\r\n        setShow(true);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  function handleChange(e) {\r\n    setComment(e.target.value);\r\n  }\r\n\r\n  function handleCloseDelModal(status) {\r\n    setDeleteModalShow(false);\r\n    if (status == \"yes\") {\r\n      console.log(\"masukk delete\");\r\n      axios({\r\n        method: \"DELETE\",\r\n        url: `/answers/${props.PostId}/${props.AnswerId}`,\r\n        headers: {\r\n          access_token: localStorage.getItem(\"access_token\"),\r\n        },\r\n      })\r\n        .then((_) => {\r\n          setShow(false);\r\n          props.refetch();\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }\r\n\r\n  function handleShowDelModal() {\r\n    setDeleteModalShow(true);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"col-12 mt-2\">\r\n        <div className=\"card border-dark mb-3\" style={{ maxWidth: \"100rem\" }}>\r\n          <div className=\"card-header\">{props.name}</div>\r\n\r\n          <a href=\"#delete\" hidden={hideBtn} onClick={handleShowDelModal}>\r\n            <i\r\n              className=\"fa fa-trash-o\"\r\n              style={{\r\n                fontSize: \"24px\",\r\n                position: \"absolute\",\r\n                right: \"70px\",\r\n                top: \"8px\",\r\n              }}\r\n            ></i>\r\n          </a>\r\n          <Modal centered show={showDeleteModal} onHide={handleCloseDelModal}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title style={{ color: \"red\" }}>Notifications!</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>Are You Sure?</Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={handleCloseDelModal}>\r\n                No\r\n              </Button>\r\n              <Button\r\n                variant=\"primary\"\r\n                onClick={() => handleCloseDelModal(\"yes\")}\r\n              >\r\n                Yes\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n          <a href=\"#edit\" hidden={hideBtn} onClick={handleShow}>\r\n            <i\r\n              className=\"fa fa-pencil-square-o\"\r\n              style={{\r\n                fontSize: \"24px\",\r\n                position: \"absolute\",\r\n                right: \"16px\",\r\n                top: \"10px\",\r\n              }}\r\n            ></i>\r\n          </a>\r\n          <Modal show={show} onHide={handleClose} centered>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Action</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <Form>\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                  <Form.Label>Edit Your Comment</Form.Label>\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    name=\"comment\"\r\n                    value={comment.description}\r\n                    onChange={handleChange}\r\n                    placeholder=\"Input Title\"\r\n                  />\r\n                </Form.Group>\r\n                <Modal.Footer>\r\n                  <Button\r\n                    variant=\"secondary\"\r\n                    onClick={() => handleClose(\"close\")}\r\n                  >\r\n                    Close\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    onClick={() => handleClose(\"save-edit\")}\r\n                  >\r\n                    Save\r\n                  </Button>\r\n                </Modal.Footer>\r\n              </Form>\r\n            </Modal.Body>\r\n          </Modal>\r\n          <div className=\"card-body text-dark\">\r\n            <h5 className=\"card-title\">{props.role}</h5>\r\n            {/* <p className=\"card-text\">{props.comment}</p> */}\r\n            <div dangerouslySetInnerHTML={ { __html: props.comment } }></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Black\\Documents\\HACKTIV\\Phase-3\\w4\\project-test01\\CLIENT\\client\\src\\components\\Navbar.js",["108"],"import { Button, Nav, Modal, Form } from 'react-bootstrap'\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { ResponseGoogle } from \"../components\";\r\nimport GitHubLogin from \"react-github-login\";\r\nimport axios from \"../config/axios\";\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react'\r\n// import Editor from '../ckeditor5/src/ckeditor'\r\nimport Editor from '@ckeditor/ckeditor5-build-classic'\r\n\r\n\r\nexport default function NavBar(props) {\r\n  const [isLogin,setIsLogin] = useState(false)\r\n  const [show, setShow] = useState(false);\r\n  const [inputModal, setInputModal] = useState({\r\n    question: '',\r\n    description: '',\r\n    category:'Javascript'\r\n  })\r\n\r\n  const onSuccess = (res) => {\r\n    console.log(res.code);\r\n    axios\r\n      .get(`/user/oauth-callback?code=${res.code}`)\r\n      .then(({ data }) => {\r\n        console.log(data);\r\n        localStorage.setItem(\"access_token\", data.access_token);\r\n        localStorage.setItem(\"nickname\", data.nickname);\r\n        setIsLogin(true)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  const onFailure = (response) => console.error(response);\r\n\r\n  function handleChange(e) {\r\n    setInputModal({ ...inputModal, [e.target.name]: e.target.value });\r\n  }\r\n  function handleChangeEditor (e) {\r\n    console.log(e)\r\n  }\r\n\r\n  function handleClose(status) {\r\n    setShow(false);\r\n\r\n    if (status === 'save-post'){\r\n      axios({\r\n        method: \"POST\",\r\n        url: `/post`,\r\n        data: {\r\n          question: inputModal.question,\r\n          description: inputModal.description,\r\n          category: inputModal.category,\r\n        },\r\n        headers: {\r\n          access_token: localStorage.getItem(\"access_token\"),\r\n        },\r\n      })\r\n        .then((_) => {\r\n          props.refetch()\r\n          console.log(\"berhasil\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }\r\n  function handleShow() {\r\n    setShow(true);\r\n  } \r\n  useEffect(()=>{\r\n    if(localStorage.getItem('access_token')){\r\n      setIsLogin(true)\r\n    }\r\n    // Editor.builtinPlugins.map( plugin => console.log(plugin.pluginName) );\r\n  },[])\r\n  const logout = () => {\r\n    localStorage.clear()\r\n    setIsLogin(false)\r\n  }\r\n\r\n\r\n  return (\r\n    <nav\r\n      className=\"navbar navbar-expand-lg justify-content-center align-items-center\"\r\n      style={{ backgroundColor: \"#3399FF\" }}\r\n    >\r\n      <NavLink\r\n        exact\r\n        to=\"/\"\r\n        activeStyle={{ fontWeight: \"bold\" }}\r\n        className=\"btn navbar-brand\"\r\n      >\r\n        Home\r\n      </NavLink>\r\n      <Button variant=\"\" onClick={handleShow}>\r\n        Ask Question\r\n      </Button>\r\n\r\n      <Modal centered show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>AskDev</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>Question</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"question\"\r\n                value={inputModal.question}\r\n                onChange={handleChange}\r\n                placeholder=\"Input Question\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n\r\n                <Form.Label>Description</Form.Label>\r\n                {/* <Form.Control as=\"textarea\" name=\"description\" value={inputModal.description} onChange={handleChange} placeholder=\"Input Description\" /> */}\r\n                {/* <Editor editorState={editorState} onChange={setEditorState}/>\r\n                 */}\r\n                 <CKEditor\r\n                  config={{placeholder: \"Overview ...\"}} \r\n                  editor={ Editor }\r\n                  data={inputModal.description}\r\n                  onReady={ editor => {\r\n                      // You can store the \"editor\" and use when it is needed.\r\n                      console.log( 'Editor is ready to use!', editor );\r\n                  } }\r\n                  onChange={ ( event, editor ) => {\r\n                      const data = editor.getData();\r\n                      setInputModal({...inputModal,description:data})\r\n                      console.log( { event, editor, data } );\r\n                  } }\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n              <Form.Label>Select category</Form.Label>\r\n\r\n              <Form.Control as=\"select\" custom name=\"category\" onChange={handleChange}>\r\n                \r\n                <option value=\"Javascript\">Javascript</option>\r\n                <option value=\"Python\">Python</option>\r\n                <option value=\"Java\">Java</option>\r\n                <option value=\"C++\">C++</option>\r\n                <option value=\"C#\">C#</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={() => handleClose(\"close\")}>\r\n                Close\r\n              </Button>\r\n              <Button\r\n                variant=\"primary\"\r\n                onClick={() => handleClose(\"save-post\")}\r\n              >\r\n                Post\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n      <h2 style={{fontWeight:'bold',marginLeft:'25rem',marginRight:'auto'}}>AskDev</h2>\r\n      {\r\n        isLogin ?\r\n        <>\r\n          <h6>Hi, {localStorage.getItem('nickname')}</h6>\r\n          <button onClick={logout} className=\"btn btn-danger p-1\" style={{marginTop:'-0.4rem',marginLeft:'0.2rem'}}>logout</button>\r\n        </>\r\n        :\r\n        <>\r\n          <h4 style={{height:'20px',fontSize:'1rem'}}>Login With:</h4> \r\n          <Nav.Link>\r\n          <ResponseGoogle setIsLogin={setIsLogin} style={{height:'auto'}} />\r\n          </Nav.Link>\r\n          <div className=\"align-items-center row github-button\">\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"16\"\r\n              height=\"16\"\r\n              fill=\"currentColor\"\r\n              className=\"bi bi-github\"\r\n              viewBox=\"0 0 16 16\"\r\n            >\r\n              <path d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.012 8.012 0 0 0 16 8c0-4.42-3.58-8-8-8z\" />\r\n            </svg>\r\n            <GitHubLogin\r\n              clientId=\"07b7bf9b0666de61261d\"\r\n              buttonText=\"Github\"\r\n              onSuccess={onSuccess}\r\n              onFailure={onFailure}\r\n              valid={true}\r\n              className=\"btn\"\r\n              redirectUri=\"http://localhost:3000\"\r\n            />\r\n          </div>\r\n        </>\r\n      }\r\n\r\n            {/* <Nav.Link href=\"/github\">\r\n              <Button variant=\"dark\" style={{ height: \"44px\" }}>\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"16\"\r\n                  height=\"16\"\r\n                  fill=\"currentColor\"\r\n                  className=\"bi bi-github\"\r\n                  viewBox=\"0 0 16 16\"\r\n                >\r\n                  <path d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.012 8.012 0 0 0 16 8c0-4.42-3.58-8-8-8z\" />\r\n                </svg>\r\n                github\r\n              </Button>\r\n            </Nav.Link> */}\r\n        </nav>\r\n\r\n  );\r\n}\r\n",{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":10,"column":10,"nodeType":"115","messageId":"116","endLine":10,"endColumn":17},{"ruleId":"117","severity":1,"message":"118","line":19,"column":6,"nodeType":"119","endLine":19,"endColumn":18,"suggestions":"120"},{"ruleId":"113","severity":1,"message":"121","line":1,"column":10,"nodeType":"115","messageId":"116","endLine":1,"endColumn":14},{"ruleId":"117","severity":1,"message":"118","line":44,"column":6,"nodeType":"119","endLine":44,"endColumn":8,"suggestions":"122"},{"ruleId":"117","severity":1,"message":"123","line":34,"column":5,"nodeType":"119","endLine":34,"endColumn":7,"suggestions":"124"},{"ruleId":"113","severity":1,"message":"125","line":1,"column":31,"nodeType":"115","messageId":"116","endLine":1,"endColumn":38},{"ruleId":"126","severity":1,"message":"127","line":53,"column":16,"nodeType":"128","messageId":"129","endLine":53,"endColumn":18},{"ruleId":"113","severity":1,"message":"130","line":40,"column":12,"nodeType":"115","messageId":"116","endLine":40,"endColumn":30},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'refetch'. Either include it or remove the dependency array.","ArrayExpression",["133"],"'Link' is defined but never used.",["134"],"React Hook useEffect has a missing dependency: 'props.roomId'. Either include it or remove the dependency array.",["135"],"'NavLink' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'handleChangeEditor' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},"Update the dependencies array to be: [refetch, refreshKey]",{"range":"142","text":"143"},"Update the dependencies array to be: [refetch]",{"range":"144","text":"145"},"Update the dependencies array to be: [props.roomId]",{"range":"146","text":"147"},[743,755],"[refetch, refreshKey]",[1327,1329],"[refetch]",[1043,1045],"[props.roomId]"]